<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小蜗牛的大梦想</title>
    <link>https://han1475.com/</link>
    <description>Recent content on 小蜗牛的大梦想</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Nov 2019 14:56:00 +0800</lastBuildDate>
    
        <atom:link href="https://han1475.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://han1475.com/about/</link>
      <pubDate>Tue, 06 Aug 2019 03:06:03 +0800</pubDate>
      
      <guid>https://han1475.com/about/</guid>
      
        <description>

&lt;h1 id=&#34;程序员-技术宅-单身狗&#34;&gt;程序员、技术宅、单身狗&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;emacs新手党&lt;/li&gt;
&lt;li&gt;一切软件皆为vim键位&lt;/li&gt;
&lt;li&gt;大前端爱好者&lt;/li&gt;
&lt;li&gt;图吧垃圾佬&lt;/li&gt;
&lt;li&gt;现在惯用Arch Linux&lt;/li&gt;
&lt;li&gt;B站活跃分子&lt;/li&gt;
&lt;li&gt;Java开发迷路ing&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>git submodule常用命令</title>
      <link>https://han1475.com/post/git-submodule/</link>
      <pubDate>Tue, 05 Nov 2019 14:56:00 +0800</pubDate>
      
      <guid>https://han1475.com/post/git-submodule/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;Git中子模块（submodule）允许你将一个 Git 仓库作为另一个 Git 仓库的子目录。它能让你将另一个仓库克隆到自己的项目中，同时还保持提交的独立。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加子模块&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nil&#34;&gt;git submodule add MOD_REPO YOUR_PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述命令会在项目下生成.gitmodules文件，其中保存了子模块的信息。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用包含子模块的项目,可以采取下列两种方式。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;克隆后再初始化并更新子模块&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone MAIN_REPO
git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在克隆时增加额外参数&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone MAIN_REPO --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;删除子模块&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git submodule deinit {MOD_NAME}
git rm --cached {MOD_NAME}
git commit -am &amp;quot;Remove a submodule.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改某个模块的URL属性&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;修改.gitmodule文件中对应模块的url属性&lt;/li&gt;
&lt;li&gt;运行git submodule sync 命令，将新的url更新到文件.git/config&lt;/li&gt;

&lt;li&gt;&lt;p&gt;提交修改&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git commit -am &amp;quot;Update submodule url.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>合并两个git仓库，保留提交记录</title>
      <link>https://han1475.com/post/merge-two-git-repo/</link>
      <pubDate>Tue, 06 Aug 2019 09:17:00 +0800</pubDate>
      
      <guid>https://han1475.com/post/merge-two-git-repo/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;说明将repo1合并到repo2中，并保留repo1的commit记录.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在repo2中依次运行下列命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git remote add other /your/path/to/repo1
git fetch other
git checkout -b repo1 other/master
git checkout master
git merge repo1 --allow-unrelated-histories
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;为解决合并仓库时出现的fatal: refusing to merge unrelated histories错误，我们这里使用了&amp;ndash;allow-unrelated-histories选项。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;合并仓库时和常规merge一致需处理合并冲突。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
  </channel>
</rss>
